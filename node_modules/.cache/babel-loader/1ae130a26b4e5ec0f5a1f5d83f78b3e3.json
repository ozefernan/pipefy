{"ast":null,"code":"import _slicedToArray from \"/home/rene/Desktop/Estudo/rocketfy/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rene/Desktop/Estudo/rocketfy/src/components/Card/index.js\";\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { Container, Label } from './styles';\nexport default function Card({\n  data\n}) {\n  const _useDrag = useDrag({\n    item: {\n      type: 'CARD'\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  }),\n        _useDrag2 = _slicedToArray(_useDrag, 2),\n        isDragging = _useDrag2[0].isDragging,\n        dragRef = _useDrag2[1];\n\n  return React.createElement(Container, {\n    ref: dragRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, data.labels.map(label => React.createElement(Label, {\n    key: label,\n    color: label,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, data.content), data.user && React.createElement(\"img\", {\n    src: data.user,\n    alt: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/rene/Desktop/Estudo/rocketfy/src/components/Card/index.js"],"names":["React","useDrag","Container","Label","Card","data","item","type","collect","monitor","isDragging","dragRef","labels","map","label","content","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,UAAjC;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA,mBACHJ,OAAO,CAAC;AACxCK,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADkC;AAExCC,IAAAA,OAAO,EAAEC,OAAO,KAAK;AACnBC,MAAAA,UAAU,EAAED,OAAO,CAACC,UAAR;AADO,KAAL;AAFwB,GAAD,CADJ;AAAA;AAAA,QAC5BA,UAD4B,gBAC5BA,UAD4B;AAAA,QACdC,OADc;;AASrC,SACE,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,IAAI,CAACO,MAAL,CAAYC,GAAZ,CAAgBC,KAAK,IAAI,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAEA,KAAZ;AAAmB,IAAA,KAAK,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,CADH,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIT,IAAI,CAACU,OAAT,CAJF,EAKIV,IAAI,CAACW,IAAL,IAAa;AAAK,IAAA,GAAG,EAAEX,IAAI,CAACW,IAAf;AAAqB,IAAA,GAAG,EAAC,EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALjB,CADF;AASD","sourcesContent":["import React from 'react';\nimport { useDrag } from 'react-dnd';\n\nimport { Container, Label } from './styles';\n\nexport default function Card({ data }) {\n  const [{ isDragging }, dragRef] = useDrag({\n    item: { type: 'CARD'},\n    collect: monitor => ({\n      isDragging: monitor.isDragging(),\n\n    })\n  })\n\n  return (\n    <Container ref={dragRef}>\n      <header>\n        {data.labels.map(label => <Label key={label} color={label} />)}\n      </header>\n      <p>{data.content}</p>\n      { data.user && <img src={data.user} alt=\"\"/> }\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}